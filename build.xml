<?xml version="1.0"?>

<project name="RCS" default="compile" basedir=".">

	<description>
        "Robotic Control System - Development"
     </description>

	<!-- Dependent entries -->
	<tstamp>
		<format property="tstamp_build" pattern="yyyyMMdd'-'HHmm" />
		<format property="build_date" pattern="yyyy-MM-dd HH:mm" />
	</tstamp>

	<property environment="env" />

	<property name="organization" value="ARI Instrument Software Development Group" />
	<property name="web" value="http://telescope.livjm.ac.uk" />
	<property name="author" value="S.N.Fraser" />
	<property name="email" value="S.N.Fraser@ljmu.ac.uk" />

	<!-- Source Directories -->
	<property name="project.dir" value="." />
	<property name="config.dir" value="${project.dir}/config" />
	<property name="src.dir" value="${project.dir}/java" />

	<!-- Build Directories -->
	<property name="build.dir" value="${env.HOME}/build/rcs" />
	<property name="build.src" value="${build.dir}/src" />
	<property name="build.class" value="${build.dir}/java" />
	<property name="build.dist" value="${build.dir}/dist" />

	<property name="javalib.dir" value="${env.LT_HOME}/bin/javalib" />
	<property name="javalib.3p.dir" value="${env.LT_HOME}/bin/javalib_third_party" />

	<!-- -->
	<property name="jar" value="rcs_class.jar" />
	<property name="image.proc.dir" value="${env.LT_HOME}/bin/Colour_jpeg" />
	<property name="release.notRequired" value="true" />

	<target name="whoami">
		<echo message="I am ${env.USER} running ${env.SHELL} on a ${env.HOSTTYPE} at ${env.HOST} and LTHOME is ${env.LT_HOME} " />
	</target>

	<!-- PREPARE BUILD -->

	<target name="prepare" description="Prepare build directories">
		<delete dir="${build.class}" />
		<mkdir dir="${build.class}" />
		<delete dir="${build.src}" />
		<mkdir dir="${build.src}" />

		<tstamp>
			<format property="BUILD" pattern="yyyyMMdd_HHmm" locale="en" />
		</tstamp>
		<echo message="Build date: ${BUILD}" />
	</target>


	<!-- CLEANUP DROSS -->

	<target name="clean" description="Clean out dross">
		<delete verbose="true">
			<fileset dir="." includes="**/*~" defaultexcludes="false" />
		</delete>
	</target>


	<!-- COMPILE -->

	<target name="compile" depends="prepare" description="Compile sources">

		<!-- Version info up2date -->

		<property file="version.properties" />
		<property file="build.number" />

		<echo message="Compiling: RCS ${major.version}.${minor.version}.${patch.version} (${release.name})  Build: ${build.number}" />

		<filter token="MAJOR-VERSION" value="${major.version}" />
		<filter token="MINOR-VERSION" value="${minor.version}" />
		<filter token="PATCH-VERSION" value="${patch.version}" />
		<filter token="BUILD-NUMBER" value="${build.number}" />
		<filter token="RELEASE-NAME" value="${release.name}" />
		<filter token="BUILD-DATE" value="${BUILD}" />


		<copy todir="${build.src}" filtering="true">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</copy>

		<echo message="Copied filtered source to ${build.src}" />

		<!-- Compile -->

		<javac srcdir="${build.src}" destdir="${build.class}" debug="on" listfiles="no" source="1.5" target="1.5" includeAntRuntime="false" excludes="ngat/rcs/pos/**/*.java">

			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${env.LT_HOME}/bin/javalib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${env.LT_HOME}/bin/javalib_third_party">
					<include name="*.jar" />
					<include name="jibx/jibx-run.jar" />
				</fileset>
			</classpath>
		</javac>

	</target>


	<!-- RMIC -->

	<target name="rmic" depends="compile" description="Generate RMI stubs">
		<rmic debug="true" base="${build.class}" includes="ngat/rcs/tmm/BasicExecTimingModel.class,
                       ngat/rcs/tms/BasicAvailabilityModel.class,
                       ngat/rcs/scm/detection/BasicWeatherMonitoring.class
                       ngat/rcs/tms/BasicModeManagement.class,
                       ngat/rcs/tms/BasicModeController.class,      
                       ngat/rcs/tms/manager/DefaultModalTask.class,
                       ngat/rcs/tms/TaskOperations.class,
					   ngat/rcs/scm/detection/DefaultAutoguiderMonitor.class,
			           ngat/rcs/scm/detection/DefaultTrackingMonitor.class,
			           ngat/rcs/scm/detection/DefaultInstrumentMonitor.class,	
			           ngat/rcs/scm/test/TestAgMonStateListener.class,
     	               ngat/rcs/tms/DefaultMutableAdvancedBookingModel.class,
					   ngat/rcs/telemetry/TelescopeArchiveGateway.class,
			           ngat/rcs/telemetry/InstrumentArchiveGateway.class,
			           ngat/rcs/telemetry/OperationsArchiveGateway.class,
			           ngat/rcs/telemetry/MeteorologyArchiveGateway.class,
			           ngat/rcs/telemetry/TaskArchiveGateway.class
			           ngat/rcs/telemetry/SkyModelArchiveGateway.class,
			           ngat/rcs/control/DefaultSystemPropertiesMutator.class,
		               ngat/rcs/test/TcmGatewayReader.class,
                       ngat/rcs/oldstatemodel/test/TestStateModel.class,
			           ngat/rcs/comms/CIL_ProxyHandler.class,
                       ngat/rcs/ops/OperationsManager.class,
                       ngat/rcs/newstatemodel/StandardStateModel.class,
					   ngat/rcs/tms/BasicTaskMonitor.class,
                       ngat/rcs/telemetry/DefaultGroupOperationsMonitor.class,
					   ngat/rcs/ers/test/BasicReactiveSystem.class,
     	               ngat/rcs/experimental/TestScheduler.class,
     	               ngat/rcs/experimental/TestAsynchronousScheduleResponseHandler.class" stubversion="1.2">
			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${env.LT_HOME}/bin/javalib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</rmic>
	</target>



	<!-- DEPLOY TO JAR -->

	<target name="jar" depends="rmic" description="Create class JAR">
		<echo message="Build number: ${BUILD}" />

		<echo message="Jarring main" />
		<jar jarfile="${javalib.dir}/${jar}" basedir="${build.class}" update="true" />

		<!-- set perm rw-rw-r -->
		<chmod file= "${javalib.dir}/${jar}" perm="664"/>
		
	</target>

	<!-- BUILD AND JAR-->

	<target name="bjar" description="Jar and advance build number" depends="jar">

		<property file="build.number" />
		<buildnumber />

		<tstamp>
			<format property="change.date" pattern="yyyy-MM-dd HH:mm" locale="en" />
		</tstamp>

		<echo message="${change.date} : BUILD  : ${build.number}${line.separator}" file="changes.dat" append="true" />

	</target>

	<!-- API DOCS -->

	<target name="apidocs" description="Generate API documentation">

		<javadoc destdir="${env.LT_HOME}/public_html/rcs/javadocs" author="true" version="true" private="true" verbose="true" windowtitle="RCS Build ${BUILD}">

			<classpath>
				<pathelement path="${classpath}" />
				<fileset dir="${env.LT_HOME}/bin/javalib">
					<include name="*.jar" />
				</fileset>
			</classpath>

			<packageset dir="." defaultexcludes="yes">
				<include name="ngat/rcs/**" />
			</packageset>

		</javadoc>

	</target>


	<!-- DEPLOY TO TARGET  -->

	<target name="deploy" depends="jar" description="Deployment">

		<echo message="Deployment for: ${ant.project.name}" />

		<input message="Please select a deployment configuration" addproperty="scope" defaultvalue="lt" />

		<property name="scope.dir" value="${config.dir}/${scope}" />

		<delete dir="${build.dist}" />

		<copy file="${javalib.dir}/${jar}" todir="${build.dist}" verbose="true" />

		<copy todir="${build.dist}/config">
			<fileset dir="${scope.dir}/config" />
		</copy>

		<copy file="${scope.dir}/rcs.properties" todir="${build.dist}" verbose="true" />
		<copy file="${scope.dir}/telescope.xml" todir="${build.dist}" verbose="true" />
		<copy file="${scope.dir}/ireg.xml" todir="${build.dist}" verbose="true" />
		<copy file="${scope.dir}/rules.xml" todir="${build.dist}" verbose="true" />

		<!-- Create various empty subdirectories for deployed structure -->
		<mkdir dir="${build.dist}/planetarium" />
		<mkdir dir="${build.dist}/planetarium/images" />
		<mkdir dir="${build.dist}/planetarium/keys" />
		<!--<copy file = "${config.dir}/any/misc/certs/std_certs_latest" todir = "${build.dir}/planetarium/keys" /> -->

		<mkdir dir="${build.dist}/planetarium/scripts" />
		<copy todir="${build.dist}/planetarium/scripts">
			<fileset dir="${project.dir}/scripts/pca" />
		</copy>

		<!-- Grab the image processing executables and configs -->
		<mkdir dir="${build.dist}/planetarium/executables" />
		<copy file="${image.proc.dir}/gpp_latest" todir="${build.dist}/planetarium/executables" />
		<copy file="${image.proc.dir}/ppp_latest" todir="${build.dist}/planetarium/executables" />
		<copy file="${image.proc.dir}/gpp_cfg.txt" todir="${build.dist}/planetarium/executables" />
		<copy file="${image.proc.dir}/ppp_cfg.txt" todir="${build.dist}/planetarium/executables" />

		<mkdir dir="${build.dist}/toop" />
		<mkdir dir="${build.dist}/toop/accounting" />
		<mkdir dir="${build.dist}/toop/scripts" />
		<mkdir dir="${build.dist}/toop/certs" />
	
		<copy todir="${build.dist}/toop/scripts">
			<fileset dir="${env.LT_HOME}/src/rcs/scripts/toca" />
		</copy>

		<mkdir dir="${build.dist}/exec" />
		<copy todir="${build.dist}/exec">
			<fileset dir="${env.LT_HOME}/src/rcs/scripts/exec" />
		</copy>

		<mkdir dir="${build.dist}/scripts" />
		<copy todir="${build.dist}/scripts">
			<fileset dir="${env.LT_HOME}/src/rcs/scripts/util" />
		</copy>

		<mkdir dir="${build.dist}/data" />

		<!-- Build number increment - only do this if everything has worked so far -->

		<property file="build.number" />
		<buildnumber />
		<property file="version.properties" />
		<property name="version" value="${major.version}.${minor.version}.${patch.version}" />
		<property name="release.candidate" value="${major.version}.${minor.version}.${patch.version}_${build.number} (${release.name} - MVR: ${release.number}:${patch.number})" />

		<echo message="Deployment: ${ant.project.name} V${release.candidate})" />

		<echo message="${ant.project.name}" file="${build.dist}/my-deploy" />
		<echo message="${line.separator}Organization: ${organization}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}Web:          ${web}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}Author:       ${author}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}Email:        ${email}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}----------------------------------------------------" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}   Config:    ${scope}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}   Version:   ${version}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}   MMVR:      ${release.name} - MVR: ${release.number}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}   Build:     ${build.number}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}   Date:      ${build_date}" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}----------------------------------------------------" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}Changes in this release" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}----------------------------------------------------" file="${build.dist}/my-deploy" append="true" />
		<echo message="${line.separator}" file="${build.dist}/my-deploy" append="true" />

		<concat destfile="${build.dist}/my-deploy" append="true">
			<fileset file="changes.dat" />
		</concat>

		<property name="deploy.tar" value="rcs_${scope}_${version}_${build.number}_${DSTAMP}.tar" />
		<tar tarfile="${build.dir}/${deploy.tar}" basedir="${build.dist}" />

		<echo message="Completed ${ant.project.name} ${release.candidate} - saved to: ${deploy.tar} )" />

		<!--<mail mailhost="mail.ljmu.ac.uk" subject="${ant.project.name}- Build" user="ASTSFRAS" password="mangopie13dec">
			<from address="S.N.Fraser@ljmu.ac.uk" />
			<to address="S.N.Fraser@ljmu.ac.uk" />

			<message>

           ${ant.project.name}
           Organization: ${organization}
           Web:          ${web}
           Author:       ${author}
           Email:        ${email}
           Current release: 
           
           Config:  ${scope}
           Date:    ${tstamp_build}
           Version: ${release.candidate}
           Build:   ${build.number}
         
          </message>
		</mail>-->

	</target>

	<!-- MAIL TEST -->
	<target name="mailtest">
		<mail mailhost="mail.ljmu.ac.uk" subject="${ant.project.name}- Build" user="ASTSFRAS" password="mangopie13dec">
			<from address="S.N.Fraser@ljmu.ac.uk" />
			<to address="S.N.Fraser@ljmu.ac.uk" />

			<message>
				Code Deployment mail test				
			</message>
		</mail>
	</target>

	<!-- VERSION NUMBERING -->

	<target name="major" description="New Major release">

		<input message="Please enter a name for this (major) release: " addproperty="release.name" defaultvalue="Standard" />

		<propertyfile file="version.properties" comment="Version Numbers">
			<entry key="major.version" type="int" default="0" operation="+" />
			<entry key="minor.version" type="int" default="0" value="0" />
			<entry key="patch.version" type="int" default="0" value="0" />
			<entry key="release.number" type="int" default="0" operation="+" />
			<entry key="patch.number" type="int" default="0" operation="+" />
			<entry key="release.name" value="${release.name}" />
		</propertyfile>

		<property file="version.properties" />

		<echo message="Incrementing major version to release: ${major.version}.${minor.version}.${patch.version} (${release.name} - MVR: ${release.number})" />

		<echo message="${line.separator}MVR: ${release.number} = ${major.version}.${minor.version} / ${release.name}" file="names.properties" append="true" />

	</target>


	<target name="minor" description="New Minor release">

		<input message="Please enter a name for this (minor) release: " addproperty="release.name" defaultvalue="Standard" />

		<propertyfile file="version.properties" comment="Version Numbers">
			<entry key="minor.version" type="int" default="0" operation="+" />
			<entry key="patch.version" type="int" default="0" value="0" />
			<entry key="release.number" type="int" default="0" operation="+" />
			<entry key="patch.number" type="int" default="0" operation="+" />
			<entry key="release.name" value="${release.name}" />
		</propertyfile>

		<property file="version.properties" />

		<echo message="Incrementing minor version to release: ${major.version}.${minor.version}.${patch.version} (${release.name} - MVR: ${release.number})" />
		<echo message="${line.separator}MVR: ${release.number} = ${major.version}.${minor.version} / ${release.name}" file="names.properties" append="true" />

	</target>


	<target name="patch" description="New Patch level">

		<propertyfile file="version.properties" comment="Version Numbers">
			<entry key="patch.version" type="int" default="0" operation="+" />
			<entry key="patch.number" type="int" default="0" operation="+" />
		</propertyfile>

		<property file="version.properties" />

		<echo message="Incrementing patch version to: ${major.version}.${minor.version}.${patch.version}" />

	</target>

	<!-- CHANGE LOGGING -->
	<target name="change" description="Add a change message to current change log">

		<input message="Please enter a change message in the form [subsystem :  class : description]:" addproperty="change.item" />

		<tstamp>
			<format property="change.date" pattern="yyyy-MM-dd HH:mm" locale="en" />
		</tstamp>

		<!--  End each line on a newline -->
		<echo message="${change.date} : CODE   : ${change.item}${line.separator}" file="changes.dat" append="true" />

	</target>

	<!-- CONFIG CHANGE LOGGING -->
	<target name="config" description="Add a config message to current change log">

		<input message="Please enter a config message in the form [file :  key : description]:" addproperty="change.item" />

		<tstamp>
			<format property="change.date" pattern="yyyy-MM-dd HH:mm" locale="en" />
		</tstamp>

		<!--  End each line on a newline -->
		<echo message="${change.date} : CONFIG : ${change.item}${line.separator}" file="changes.dat" append="true" />

	</target>


	<target name="show-version">

		<property file="version.properties" />
		<property file="build.number" />

		<echo message="Version: ${major.version}.${minor.version}.${patch.version}_${build.number} (${release.name} - MVR: ${release.number}:${patch.number}) " />

	</target>

</project>
