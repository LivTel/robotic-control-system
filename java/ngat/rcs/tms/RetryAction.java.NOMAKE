/*   
    Copyright 2006, Astrophysics Research Institute, Liverpool John Moores University.

    This file is part of Robotic Control System.

     Robotic Control Systemis free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Robotic Control System is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Robotic Control System; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
package ngat.rcs;


/** RetryAction is a RecoveryAction which involves making retries of the
 * original task.
 *
 * <dl>	
 * <dt><b>RCS:</b>
 * <dd>$Id: RetryAction.java.NOMAKE,v 1.1 2006/05/17 06:32:59 snf Exp $
 * <dt><b>Source:</b>
 * <dd>$Source: /home/dev/src/rcs/java/ngat/rcs/tmm/RCS/RetryAction.java.NOMAKE,v $
 * </dl>
 * @author $Author: snf $
 * @version $Revision: 1.1 $
 */

public class RetryAction extends RecoveryAction {

    /** Default value for multiplication factor for delay backoff.*/
    public static final double DEFAULT_BACKOFF_FACTOR = 1.5; 

    /** Maximum number of retries.*/
    protected int maxtries;

    /** Delay before retry (millis).*/
    protected long delay;

    /** True if the delay should backoff each time.*/
    protected boolean backoff;

    /** Multiplication factor for delay backoff.*/
    protected double backoffFactor = DEFAULT_BACKOFF_FACTOR; 

    /** Create a retry action.*/
    public RetryAction(int maxtries, long delay, boolean backoff) {
	super();
	this.maxtries = maxtries;
	this.delay    = delay;
	this.backoff  = backoff;
    }

    /** Returns the Maximum number of retries.*/ 
    public int getMaxTries() { return maxtries; }
    
    /** Returns the Delay before retry (millis).*/
    public long getDelay() { return delay; }
    
    /** Returns True if the delay should backoff each time.*/
    public boolean backoff() { return backoff; }
    
    /** Returns the Multiplication factor for delay backoff.*/
    public double getBackoffFactor() { return backoffFactor; }

}

/** $Log: RetryAction.java.NOMAKE,v $
/** Revision 1.1  2006/05/17 06:32:59  snf
/** Initial revision
/** */
