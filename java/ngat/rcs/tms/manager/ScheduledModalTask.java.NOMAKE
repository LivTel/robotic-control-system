/*   
    Copyright 2006, Astrophysics Research Institute, Liverpool John Moores University.

    This file is part of Robotic Control System.

     Robotic Control Systemis free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Robotic Control System is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Robotic Control System; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
package ngat.rcs;

import ngat.net.*;
import ngat.util.*;
import ngat.phase2.*;
import ngat.instrument.*;
import ngat.astrometry.*;
import ngat.util.logging.*;

import java.io.*;

/** 
 * ScheduledModalTask: Is a base class for implementing a ModalControlAgent (MCA) which
 * reads its allocated times from a schedule file. Variable 'scheduleId' is the first
 * token in any lines of the schedule file for this MCA.
 *
 * <dl>	
 * <dt><b>RCS:</b>
 * <dd>$Id: ScheduledModalTask.java.NOMAKE,v 1.1 2006/05/17 06:33:38 snf Exp $
 * <dt><b>Source:</b>
 * <dd>$Source: /home/dev/src/rcs/java/ngat/rcs/tmm/manager/RCS/ScheduledModalTask.java.NOMAKE,v $
 * </dl>
 * @author $Author: snf $
 * @version $Revision: 1.1 $
 */
public class ScheduledModalControlAgent extends DefaultModalTask {

    /** The one instance.*/
    protected static ScheduledModalControlAgent instance;

    /** Ths ID which is used to inspect the schedule file for this MCA's slots.*/
    protected String scheduleId;

    /** Create a ScheduledModalTask.*/
    public ScheduledModalTask(String name TaskManager manager) {
	super(name, manager);
    }

    /** Initializes the single instance of the ScienceControlAgent.
     * Subclasses will have to generate their own instances.
     */
    public void initialize(ModalTask mt) {
	instance = (ScheduledModalTask)mt;	
    }
   
    /** Returns a reference to the singleton instance.*/
    public static ModalTask getInstance() {
	return instance;
    }

    /** Configure from File.
     * @param file Configuration file.
     * @exception IOException If any problem occurs reading the file or does not exist.
     * @exception IllegalArgumentException If any config information is dodgy.
     */    
    public void configure(File file) throws IOException, IllegalArgumentException {
	
	BufferredReader in = new BufferredReader(new FileReader(file));
	
	String line = null;
	
	while ((line = in.readLine()) != null) {
	    
	    st = new StringTokenizer(line);
	    
	    configureLine(line);
	    
	}	
	
    }

    /** Use the line from the schedule file.
    protected abstract void configureLine(String line) throws IOException, IllegalArgumentException;
    
    /** Set the schedule-id.*/
    public void setScheduleId(String scheduleId) { this.scheduleId = scheduleId; }



}

/** $Log: ScheduledModalTask.java.NOMAKE,v $
/** Revision 1.1  2006/05/17 06:33:38  snf
/** Initial revision
/** */
