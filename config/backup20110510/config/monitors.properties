#
#----------------------------------------------------------------
# Reactive Control Module: Status Monitor Rulebase configuration.
#----------------------------------------------------------------
#

#
# MONITOR <name> <period-msec>
#

MONITOR RAIN_MONITOR 10000

# Slow and fast monitors for weather
MONITOR WEATHER_1 20000
MONITOR WEATHER_2 60000

MONITOR POWER_STATE_MONITOR 5000

MONITOR CONTROL_STATE_MONITOR 5000

MONITOR RATCAM_DEWAR_MONITOR 200000
MONITOR SEEING_MONITOR 60000

MONITOR NETWORK_MONITOR 30000

MONITOR SYS_MONITOR 30000

MONITOR TRACKING_MONITOR 30000
 
MONITOR AMN_MONITOR 30000

#
# RULE <name> <cat> WHEN <filter-reading> <op> <value> 
#
# Operators: { < | > } for averaging (continuous filters).
#            { IS | NOT } for modal (discrete filters).
#
# RULESET <name> <encapsulation> <rule> 
#
# Encapsulation: SIMPLE             (simple rule-wrapping).
#                CONJ           add (conjunctive rule).
#                DISJ           or  (disjunctive rule).
#                FUZZY <weight>     (fuzzy rule). ???????

#--------------------------------------------------------------
# Set up rules for Rain alarm. ***** NOT USED AT PRESENT *****
#--------------------------------------------------------------
RULE s_RAIN_CLEAR SELECT from F_RAIN IS RAIN_STATES.RAIN_CLEAR
RULESET RS_RAIN_CLEAR SIMPLE s_RAIN_CLEAR

RULE s_RAIN_ALERT SELECT from F_RAIN_SLOW IS RAIN_STATES.RAIN_ALERT
RULESET RS_RAIN_ALERT SIMPLE s_RAIN_ALERT
 
RAIN_MONITOR assoc RS_RAIN_CLEAR fires ZZ_TEST_RAIN_ALERT
RAIN_MONITOR assoc RS_RAIN_ALERT fires ZZ_TEST_RAIN_CLEAR

#--------------------------------------------------------------
# Set up rules for wind speed alert and clear conditions.
#
# (Use simple threshold from averaged filter readings).
#--------------------------------------------------------------
RULE t_WIND_SPEED_HI THRESH WHEN F_WIND_SPEED > 15.0 
RULESET RS_WIND_SPEED_HI SIMPLE t_WIND_SPEED_HI

# Set 30 minute confidence for Lo wind speed.
RULE d_WIND_SPEED_LO DELINV WHEN F_WIND_SPEED < 12.0 INVERT 14.0 DELTA 1800000 
RULESET RS_WIND_SPEED_LO SIMPLE d_WIND_SPEED_LO

WEATHER_2 ASSOC RS_WIND_SPEED_LO fires WIND_CLEAR_30MIN
WEATHER_2 ASSOC RS_WIND_SPEED_HI fires WIND_ALERT

#--------------------------------------------------------------
# Humidity
#--------------------------------------------------------------
RULE t_HUM_HI THRESH WHEN F_HUMIDITY > 0.80
RULESET RS_HUM_HI SIMPLE t_HUM_HI

# Set 30  minute confidence for Lo humidity.
RULE d_HUM_LO DELINV WHEN F_HUMIDITY < 0.7 INVERT 0.75 DELTA 1800000
RULESET RS_HUM_LO SIMPLE d_HUM_LO

WEATHER_2 ASSOC RS_HUM_HI fires HUMIDITY_TRIG_HIGH
WEATHER_2 ASSOC RS_HUM_LO fires HUMIDITY_LOW_30MIN


#--------------------------------------------------------------
# Moisture = Analog Surface Wetness
#--------------------------------------------------------------
# (HI instananeously on crossing 10%)
RULE t_MOI_HI THRESH WHEN F_MOISTURE > 0.10
RULESET RS_MOISTURE_HI SIMPLE t_MOI_HI

# Set 30  minute confidence for Lo moisture. 
# (Lo on crossing 9% with no excursion over 9.5% within 30 minutes)
RULE d_MOI_LO DELINV WHEN F_MOISTURE < 0.09 INVERT 0.095 DELTA 1800000
RULESET RS_MOISTURE_LO SIMPLE d_MOI_LO

WEATHER_2 ASSOC RS_MOISTURE_HI fires MOISTURE_TRIG_HIGH
WEATHER_2 ASSOC RS_MOISTURE_LO fires MOISTURE_LOW_30MIN

#--------------------------------------------------------------
# Temperature
#--------------------------------------------------------------
RULE t_TEMP_LO THRESH WHEN F_TEMP < 0.0
RULESET RS_TEMP_LO SIMPLE t_TEMP_LO

# Set 30 minute confidence for high temp.
RULE d_TEMP_HI DELINV WHEN F_TEMP > 0.1 INVERT 0.05 DELTA 1800000
RULESET RS_TEMP_HI SIMPLE d_TEMP_HI

WEATHER_2 ASSOC RS_TEMP_LO fires TEMPERATURE_TRIG_LOW
WEATHER_2 ASSOC RS_TEMP_HI fires TEMPERATURE_HIGH_30MIN


#--------------------------------------------------------------
# Temperature Fancy rules combining Humidity and Temperature
#--------------------------------------------------------------

RULE xd1_HUM_LO DELINV WHEN F_HUMIDITY < 0.5 INVERT 0.55 DELTA 1800000
RULE xt2_HUM_HI THRESH WHEN F_HUMIDITY > 0.6

RULE xt3_TEMP_LO_DRY THRESH WHEN F_TEMP < -3.0
RULE xt4_TEMP_LO_WET THRESH WHEN F_TEMP < 0.0

RULE xd5_TEMP_HI_DRY DELINV WHEN F_TEMP > -2.5 INVERT -2.75 DELTA 1800000
RULE xd6_TEMP_HI_WET DELINV WHEN F_TEMP >  0.1 INVERT  0.05 DELTA 1800000

RULESET RS_DRY_HOT CONJUNCTIVE
 RS_DRY_HOT ADD xd1_HUM_LO
 RS_DRY_HOT ADD xd5_TEMP_HI_DRY

RULESET RS_WET_HOT CONJUNCTIVE
 RS_WET_HOT ADD xt2_HUM_HI
 RS_WET_HOT ADD xd6_TEMP_HI_WET

RULESET RS_DRY_COLD CONJUNCTIVE
 RS_DRY_COLD ADD xd1_HUM_LO
 RS_DRY_COLD ADD xt3_TEMP_LO_DRY

RULESET RS_WET_COLD CONJUNCTIVE
 RS_WET_COLD ADD xt2_HUM_HI
 RS_WET_COLD ADD xt4_TEMP_LO_WET

WEATHER_2 ASSOC RS_DRY_HOT  fires HOT_AND_DRY_IS_GOOD
WEATHER_2 ASSOC RS_WET_HOT  fires HOT_AND_WET_IS_GOOD
WEATHER_2 ASSOC RS_DRY_COLD fires COLD_AND_DRY_IS_BAD
WEATHER_2 ASSOC RS_WET_COLD fires COLD_AND_WET_IS_BAD

#--------------------------------------------------------------
# Set up rules for power shutdown and restart notification.
#
# (Use selection from modal filtered readings).
# (Note: variable value is compound of StateList.StateValue)
#--------------------------------------------------------------
RULE s_PWR_RESTART     SELECT FROM F_PWR_RESTART  IS POWER_FLAG_STATES.PWR_FLAG_SET
RULE s_PWR_NO_RESTART  SELECT FROM F_PWR_RESTART  IS POWER_FLAG_STATES.PWR_FLAG_CLEAR

RULE s_PWR_SHUTDOWN    SELECT FROM F_PWR_SHUTDOWN IS POWER_FLAG_STATES.PWR_FLAG_SET
RULE s_PWR_NO_SHUTDOWN SELECT FROM F_PWR_SHUTDOWN IS POWER_FLAG_STATES.PWR_FLAG_CLEAR

RULESET RS_PWR_RESTART  SIMPLE s_PWR_RESTART
RULESET RS_PWR_SHUTDOWN SIMPLE s_PWR_SHUTDOWN
RULESET RS_PWR_OKAY CONJUNCTIVE
 RS_PWR_OKAY ADD s_PWR_NO_RESTART
 RS_PWR_OKAY ADD s_PWR_NO_SHUTDOWN

POWER_STATE_MONITOR ASSOC RS_PWR_RESTART  fires ZZ_POWER_RESTART
POWER_STATE_MONITOR ASSOC RS_PWR_SHUTDOWN fires ZZ_POWER_SHUTDOWN
POWER_STATE_MONITOR ASSOC RS_PWR_OKAY     fires ZZ_POWER_OKAY

#--------------------------------------------------------------
# Set up rules for Network control and Engineering override.. 
#--------------------------------------------------------------
RULE s_NET_CON_ENABLED  SELECT from F_NET_STATE IS NET_STATES.NET_ENABLED
RULE s_ENG_NOT_OVERRIDE SELECT from F_ENG_STATE IS ENG_STATES.ENG_DISABLED

# ( OK  if net enabled AND eng disabled)
RULESET RS_CTRL_ENABLED CONJUNCTIVE
 RS_CTRL_ENABLED ADD s_NET_CON_ENABLED 
 RS_CTRL_ENABLED ADD s_ENG_NOT_OVERRIDE


RULE s_NET_CON_DISABLED SELECT from F_NET_STATE IS NET_STATES.NET_DISABLED
RULE s_ENG_OVERRIDE     SELECT from F_ENG_STATE IS ENG_STATES.ENG_ENGAGED

# ( NOK if net disabled OR eng engaged)
RULESET RS_CTRL_INHIBIT DISJUNCTIVE
 RS_CTRL_INHIBIT OR s_NET_CON_DISABLED
 RS_CTRL_INHIBIT OR s_ENG_OVERRIDE

CONTROL_STATE_MONITOR assoc RS_CTRL_ENABLED fires ZZ_CONTROL_INHIBIT_CLEAR
CONTROL_STATE_MONITOR assoc RS_CTRL_INHIBIT fires ZZ_CONTROL_INHIBIT_ALERT

#---------------------------------------------------------------
# Set up rules for monitoring System state.
#---------------------------------------------------------------

# We want a fast response to bad news but a slow response to good news

RULE s_SYS_OKAY SELECT from F_SYSTEM_SLOW IS NODE_STATES.STATE_OKAY
RULE s_SYS_WARN SELECT from F_SYSTEM_SLOW IS NODE_STATES.STATE_WARN

RULESET RS_SYS_OKAY DISJUNCTIVE
 RS_SYS_OKAY OR s_SYS_OKAY
 RS_SYS_OKAY OR s_SYS_WARN

RULE s_SYS_SUSP SELECT from F_SYSTEM_FAST IS NODE_STATES.STATE_SUSP
RULESET RS_SYS_SUSP SIMPLE s_SYS_SUSP

RULE s_SYS_STBY SELECT from F_SYSTEM_SLOW IS NODE_STATES.STATE_STBY
RULESET RS_SYS_STBY SIMPLE s_SYS_STBY

RULE s_SYS_FAIL SELECT from F_SYSTEM_FAST IS NODE_STATES.STATE_FAIL
RULESET RS_SYS_FAIL SIMPLE s_SYS_FAIL

RULE s_SYS_INIT SELECT from F_SYSTEM_FAST IS NODE_STATES.STATE_INIT
RULESET RS_SYS_INIT SIMPLE s_SYS_INIT

# ZZ messages are for test purposes while they are running in tandem with
# the builtin sensor monitoring architecture.

# CONFIRM messages are newly promoted and override builtins. 

SYS_MONITOR assoc RS_SYS_OKAY fires CONFIRM_SYSTEM_OKAY
SYS_MONITOR assoc RS_SYS_SUSP fires ZZ_TEST_SYSTEM_SUSPENDED
SYS_MONITOR assoc RS_SYS_STBY fires CONFIRM_SYSTEM_STANDBY
SYS_MONITOR assoc RS_SYS_FAIL fires ZZ_TEST_SYSTEM_FAILED
SYS_MONITOR assoc RS_SYS_INIT fires ZZ_TEST_SYSTEM_INITIALIZING


#--------------------------------------------------------------
# Setup monitors for X_TCS Network state.(Xperimental for SCMX )
# -------------------------------------------------------------
#

RULE s_X_TCS_NET_ONLINE SELECT from F_X_TCS_NET IS XNET_STATES.ONLINE
RULESET RS_X_TCS_NET_ONLINE SIMPLE s_X_TCS_NET_ONLINE

RULE s_X_TCS_NET_OFFLINE SELECT from F_X_TCS_NET IS XNET_STATES.OFFLINE
RULESET RS_X_TCS_NET_OFFLINE SIMPLE s_X_TCS_NET_OFFLINE

NETWORK_MONITOR assoc RS_X_TCS_NET_ONLINE  fires ZZ_X_TCS_NET_ONLINE
NETWORK_MONITOR assoc RS_X_TCS_NET_OFFLINE fires ZZ_X_TCS_NET_OFFLINE

#
# Setup Tracking rules
#
# Azimuth
RULE t_AZ_NEG_HI THRESH WHEN M_AZ_TRK < -0.0067
RULE t_AZ_POS_HI THRESH WHEN M_AZ_TRK > 0.0067
 
RULESET RS_AZ_TRK_FAIL DISJUNCTIVE
 RS_AZ_TRK_FAIL OR t_AZ_NEG_HI
 RS_AZ_TRK_FAIL OR t_AZ_POS_HI
 
RULE t_AZ_NEG_OK THRESH WHEN M_AZ_TRK > -0.0067
RULE t_AZ_POS_OK THRESH WHEN M_AZ_TRK < 0.0067
                                                                                
RULESET RS_AZ_TRK_OK CONJUNCTIVE
 RS_AZ_TRK_OK AND t_AZ_NEG_OK
 RS_AZ_TRK_OK AND t_AZ_POS_OK


# Altitude
RULE t_ALT_NEG_HI THRESH WHEN M_ALT_TRK < -0.0067
RULE t_ALT_POS_HI THRESH WHEN M_ALT_TRK > 0.0067
 
RULESET RS_ALT_TRK_FAIL DISJUNCTIVE
 RS_ALT_TRK_FAIL OR t_ALT_NEG_HI
 RS_ALT_TRK_FAIL OR t_ALT_POS_HI
 
RULE t_ALT_NEG_OK THRESH WHEN M_ALT_TRK > -0.0067
RULE t_ALT_POS_OK THRESH WHEN M_ALT_TRK < 0.0067
 
RULESET RS_ALT_TRK_OK CONJUNCTIVE
 RS_ALT_TRK_OK AND t_ALT_NEG_OK
 RS_ALT_TRK_OK AND t_ALT_POS_OK


# Rotator
RULE t_ROT_NEG_HI THRESH WHEN M_ROT_TRK < -0.0067
RULE t_ROT_POS_HI THRESH WHEN M_ROT_TRK > 0.0067
 
RULESET RS_ROT_TRK_FAIL DISJUNCTIVE
 RS_ROT_TRK_FAIL OR t_ROT_NEG_HI
 RS_ROT_TRK_FAIL OR t_ROT_POS_HI
 
RULE t_ROT_NEG_OK THRESH WHEN M_ROT_TRK > -0.0067
RULE t_ROT_POS_OK THRESH WHEN M_ROT_TRK < 0.0067
 
RULESET RS_ROT_TRK_OK CONJUNCTIVE
 RS_ROT_TRK_OK AND t_ROT_NEG_OK
 RS_ROT_TRK_OK AND t_ROT_POS_OK

# Events
 
TRACKING_MONITOR assoc RS_AZ_TRK_FAIL fires X_AZ_TRACK_FAILURE
TRACKING_MONITOR assoc RS_AZ_TRK_OK   fires X_AZ_TRACK_OKAY
 
TRACKING_MONITOR assoc RS_ALT_TRK_FAIL fires X_ALT_TRACK_FAILURE
TRACKING_MONITOR assoc RS_ALT_TRK_OK   fires X_ALT_TRACK_OKAY
 
TRACKING_MONITOR assoc RS_ROT_TRK_FAIL fires X_ROT_TRACK_FAILURE
TRACKING_MONITOR assoc RS_ROT_TRK_OK   fires X_ROT_TRACK_OKAY


#----------------------------------------------------------------
# Setup monitors for AMN Status.
#----------------------------------------------------------------
 
RULE s_FOLD_MOVING  SELECT from F_FOLD_STATE IS MECH_STATES.MECH_MOVING
RULE s_FOLD_STOPPED SELECT from F_FOLD_STATE IS MECH_STATES.MECH_STOPPED
RULE s_FOLD_IN_POSN SELECT from F_FOLD_STATE IS MECH_STATES.MECH_IN_POSN
RULE s_FOLD_WARNING SELECT from F_FOLD_STATE IS MECH_STATES.MECH_WARNING

RULESET RS_FOLD_OKAY DISJUNCTIVE
 RS_FOLD_OKAY OR s_FOLD_MOVING
 RS_FOLD_OKAY OR s_FOLD_STOPPED
 RS_FOLD_OKAY OR s_FOLD_IN_POSN
 RS_FOLD_OKAY OR s_FOLD_WARNING

RULE s_FOLD_OFFLINE  SELECT from F_FOLD_STATE IS MECH_STATES.MECH_OFFLINE
RULE s_FOLD_OVERRIDE SELECT from F_FOLD_STATE IS MECH_STATES.MECH_OVERRIDE
RULE s_FOLD_ERROR    SELECT from F_FOLD_STATE IS MECH_STATES.MECH_ERROR
RULE s_FOLD_UNK      SELECT from F_FOLD_STATE IS MECH_STATES.MECH_UNK

RULESET RS_FOLD_FAILURE DISJUNCTIVE
 RS_FOLD_FAILURE OR s_FOLD_OFFLINE
 RS_FOLD_FAILURE OR s_FOLD_OVERRIDE
 RS_FOLD_FAILURE OR s_FOLD_ERROR
 RS_FOLD_FAILURE OR s_FOLD_UNK

AMN_MONITOR assoc RS_FOLD_OKAY    fires SCI_FOLD_OKAY
AMN_MONITOR assoc RS_FOLD_FAILURE fires SCI_FOLD_ALERT


# System updates

RULE t_SYS_STALE THRESH WHEN F_SYS_STALE > 6000000
RULESET RS_SYS_STALE SIMPLE t_SYS_STALE

RULE t_SYS_FRESH THRESH WHEN F_SYS_STALE < 1200000
RULESET RS_SYS_FRESH SIMPLE t_SYS_FRESH

SYS_MONITOR assoc RS_SYS_STALE fires SYS_DATA_STALE
SYS_MONITOR assoc RS_SYS_FRESH fires SYS_DATA_FRESH


#----------------------------------------------------------------
# Setup monitors for Weather Status.
#----------------------------------------------------------------
RULE    s_WEATHER_OKAY  SELECT from F_WMS_STATUS_SLOW IS NODE_STATES.STATE_OKAY
RULESET RS_WEATHER_OKAY SIMPLE s_WEATHER_OKAY

RULE    s_WEATHER_SUSP SELECT from F_WMS_STATUS_FAST IS NODE_STATES.STATE_SUSP
RULESET RS_WEATHER_SUSP SIMPLE s_WEATHER_SUSP


WEATHER_2 assoc RS_WEATHER_OKAY fires WMS_STATE_OKAY
WEATHER_1 assoc RS_WEATHER_SUSP fires WMS_STATE_BAD

#--------------------------------------------------------------
# Set up rules for cloud alert and clear conditions.
#
# (Use simple threshold from averaged filter readings).
#--------------------------------------------------------------
RULE d_CLOUD_HI DELINV WHEN F_CLOUD > -25.0 INVERT -25.05 DELTA 600000
#RULE t_CLOUD_HI THRESH WHEN F_CLOUD > -25.0
RULESET RS_CLOUD_HI SIMPLE d_CLOUD_HI

# Set 10 minute confidence for Lo cloud.
RULE d_CLOUD_LO DELINV WHEN F_CLOUD < -28.0 INVERT -26.0 DELTA 600000
RULESET RS_CLOUD_LO SIMPLE d_CLOUD_LO

WEATHER_2 ASSOC RS_CLOUD_LO fires CLOUD_CLEAR
WEATHER_2 ASSOC RS_CLOUD_HI fires CLOUD_ALERT
